// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/account (interfaces: AccountComponent)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// AccountComponent is a mock of AccountComponent interface
type AccountComponent struct {
	ctrl     *gomock.Controller
	recorder *AccountComponentMockRecorder
}

// AccountComponentMockRecorder is the mock recorder for AccountComponent
type AccountComponentMockRecorder struct {
	mock *AccountComponent
}

// NewAccountComponent creates a new mock instance
func NewAccountComponent(ctrl *gomock.Controller) *AccountComponent {
	mock := &AccountComponent{ctrl: ctrl}
	mock.recorder = &AccountComponentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *AccountComponent) EXPECT() *AccountComponentMockRecorder {
	return m.recorder
}

// UpdatePassword mocks base method
func (m *AccountComponent) UpdatePassword(arg0 context.Context, arg1, arg2, arg3 string) error {
	ret := m.ctrl.Call(m, "UpdatePassword", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePassword indicates an expected call of UpdatePassword
func (mr *AccountComponentMockRecorder) UpdatePassword(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePassword", reflect.TypeOf((*AccountComponent)(nil).UpdatePassword), arg0, arg1, arg2, arg3)
}
