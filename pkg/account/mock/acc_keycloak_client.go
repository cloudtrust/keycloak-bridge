// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/account (interfaces: KeycloakClient)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// AccKeycloakClient is a mock of KeycloakClient interface
type AccKeycloakClient struct {
	ctrl     *gomock.Controller
	recorder *AccKeycloakClientMockRecorder
}

// AccKeycloakClientMockRecorder is the mock recorder for AccKeycloakClient
type AccKeycloakClientMockRecorder struct {
	mock *AccKeycloakClient
}

// NewAccKeycloakClient creates a new mock instance
func NewAccKeycloakClient(ctrl *gomock.Controller) *AccKeycloakClient {
	mock := &AccKeycloakClient{ctrl: ctrl}
	mock.recorder = &AccKeycloakClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *AccKeycloakClient) EXPECT() *AccKeycloakClientMockRecorder {
	return m.recorder
}

// UpdatePassword mocks base method
func (m *AccKeycloakClient) UpdatePassword(arg0, arg1, arg2, arg3, arg4 string) (string, error) {
	ret := m.ctrl.Call(m, "UpdatePassword", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePassword indicates an expected call of UpdatePassword
func (mr *AccKeycloakClientMockRecorder) UpdatePassword(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePassword", reflect.TypeOf((*AccKeycloakClient)(nil).UpdatePassword), arg0, arg1, arg2, arg3, arg4)
}
