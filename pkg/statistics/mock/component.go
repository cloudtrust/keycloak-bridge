// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/statistics (interfaces: Component)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=./mock/component.go -package=mock -mock_names=Component=Component github.com/cloudtrust/keycloak-bridge/pkg/statistics Component
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	apistatistics "github.com/cloudtrust/keycloak-bridge/api/statistics"
	gomock "go.uber.org/mock/gomock"
)

// Component is a mock of Component interface.
type Component struct {
	ctrl     *gomock.Controller
	recorder *ComponentMockRecorder
	isgomock struct{}
}

// ComponentMockRecorder is the mock recorder for Component.
type ComponentMockRecorder struct {
	mock *Component
}

// NewComponent creates a new mock instance.
func NewComponent(ctrl *gomock.Controller) *Component {
	mock := &Component{ctrl: ctrl}
	mock.recorder = &ComponentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Component) EXPECT() *ComponentMockRecorder {
	return m.recorder
}

// GetActions mocks base method.
func (m *Component) GetActions(arg0 context.Context) ([]apistatistics.ActionRepresentation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActions", arg0)
	ret0, _ := ret[0].([]apistatistics.ActionRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActions indicates an expected call of GetActions.
func (mr *ComponentMockRecorder) GetActions(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActions", reflect.TypeOf((*Component)(nil).GetActions), arg0)
}

// GetMigrationReport mocks base method.
func (m *Component) GetMigrationReport(arg0 context.Context, arg1 string) (map[string]bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMigrationReport", arg0, arg1)
	ret0, _ := ret[0].(map[string]bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMigrationReport indicates an expected call of GetMigrationReport.
func (mr *ComponentMockRecorder) GetMigrationReport(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMigrationReport", reflect.TypeOf((*Component)(nil).GetMigrationReport), arg0, arg1)
}

// GetStatisticsAuthenticators mocks base method.
func (m *Component) GetStatisticsAuthenticators(arg0 context.Context, arg1 string) (map[string]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatisticsAuthenticators", arg0, arg1)
	ret0, _ := ret[0].(map[string]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatisticsAuthenticators indicates an expected call of GetStatisticsAuthenticators.
func (mr *ComponentMockRecorder) GetStatisticsAuthenticators(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatisticsAuthenticators", reflect.TypeOf((*Component)(nil).GetStatisticsAuthenticators), arg0, arg1)
}

// GetStatisticsIdentifications mocks base method.
func (m *Component) GetStatisticsIdentifications(arg0 context.Context, arg1 string) (apistatistics.IdentificationStatisticsRepresentation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatisticsIdentifications", arg0, arg1)
	ret0, _ := ret[0].(apistatistics.IdentificationStatisticsRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatisticsIdentifications indicates an expected call of GetStatisticsIdentifications.
func (mr *ComponentMockRecorder) GetStatisticsIdentifications(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatisticsIdentifications", reflect.TypeOf((*Component)(nil).GetStatisticsIdentifications), arg0, arg1)
}

// GetStatisticsUsers mocks base method.
func (m *Component) GetStatisticsUsers(arg0 context.Context, arg1 string) (apistatistics.StatisticsUsersRepresentation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatisticsUsers", arg0, arg1)
	ret0, _ := ret[0].(apistatistics.StatisticsUsersRepresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatisticsUsers indicates an expected call of GetStatisticsUsers.
func (mr *ComponentMockRecorder) GetStatisticsUsers(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatisticsUsers", reflect.TypeOf((*Component)(nil).GetStatisticsUsers), arg0, arg1)
}
