// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/event (interfaces: ConsoleModule,StatisticModule,Influx)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	v2 "github.com/influxdata/influxdb/client/v2"
	reflect "reflect"
)

// ConsoleModule is a mock of ConsoleModule interface
type ConsoleModule struct {
	ctrl     *gomock.Controller
	recorder *ConsoleModuleMockRecorder
}

// ConsoleModuleMockRecorder is the mock recorder for ConsoleModule
type ConsoleModuleMockRecorder struct {
	mock *ConsoleModule
}

// NewConsoleModule creates a new mock instance
func NewConsoleModule(ctrl *gomock.Controller) *ConsoleModule {
	mock := &ConsoleModule{ctrl: ctrl}
	mock.recorder = &ConsoleModuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ConsoleModule) EXPECT() *ConsoleModuleMockRecorder {
	return m.recorder
}

// Print mocks base method
func (m *ConsoleModule) Print(arg0 context.Context, arg1 map[string]string) error {
	ret := m.ctrl.Call(m, "Print", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Print indicates an expected call of Print
func (mr *ConsoleModuleMockRecorder) Print(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*ConsoleModule)(nil).Print), arg0, arg1)
}

// StatisticModule is a mock of StatisticModule interface
type StatisticModule struct {
	ctrl     *gomock.Controller
	recorder *StatisticModuleMockRecorder
}

// StatisticModuleMockRecorder is the mock recorder for StatisticModule
type StatisticModuleMockRecorder struct {
	mock *StatisticModule
}

// NewStatisticModule creates a new mock instance
func NewStatisticModule(ctrl *gomock.Controller) *StatisticModule {
	mock := &StatisticModule{ctrl: ctrl}
	mock.recorder = &StatisticModuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *StatisticModule) EXPECT() *StatisticModuleMockRecorder {
	return m.recorder
}

// Stats mocks base method
func (m *StatisticModule) Stats(arg0 context.Context, arg1 map[string]string) error {
	ret := m.ctrl.Call(m, "Stats", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Stats indicates an expected call of Stats
func (mr *StatisticModuleMockRecorder) Stats(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*StatisticModule)(nil).Stats), arg0, arg1)
}

// Influx is a mock of Influx interface
type Influx struct {
	ctrl     *gomock.Controller
	recorder *InfluxMockRecorder
}

// InfluxMockRecorder is the mock recorder for Influx
type InfluxMockRecorder struct {
	mock *Influx
}

// NewInflux creates a new mock instance
func NewInflux(ctrl *gomock.Controller) *Influx {
	mock := &Influx{ctrl: ctrl}
	mock.recorder = &InfluxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Influx) EXPECT() *InfluxMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *Influx) Write(arg0 v2.BatchPoints) error {
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *InfluxMockRecorder) Write(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*Influx)(nil).Write), arg0)
}
