// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/user (interfaces: Component)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	fb "github.com/cloudtrust/keycloak-bridge/api/user/fb"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Component is a mock of Component interface
type Component struct {
	ctrl     *gomock.Controller
	recorder *ComponentMockRecorder
}

// ComponentMockRecorder is the mock recorder for Component
type ComponentMockRecorder struct {
	mock *Component
}

// NewComponent creates a new mock instance
func NewComponent(ctrl *gomock.Controller) *Component {
	mock := &Component{ctrl: ctrl}
	mock.recorder = &ComponentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Component) EXPECT() *ComponentMockRecorder {
	return m.recorder
}

// GetUsers mocks base method
func (m *Component) GetUsers(arg0 context.Context, arg1 *fb.GetUsersRequest) (*fb.GetUsersReply, error) {
	ret := m.ctrl.Call(m, "GetUsers", arg0, arg1)
	ret0, _ := ret[0].(*fb.GetUsersReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers
func (mr *ComponentMockRecorder) GetUsers(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*Component)(nil).GetUsers), arg0, arg1)
}
