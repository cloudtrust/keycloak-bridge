// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/management (interfaces: ConfigurationDBModule)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// ConfigurationDBModule is a mock of ConfigurationDBModule interface
type ConfigurationDBModule struct {
	ctrl     *gomock.Controller
	recorder *ConfigurationDBModuleMockRecorder
}

// ConfigurationDBModuleMockRecorder is the mock recorder for ConfigurationDBModule
type ConfigurationDBModuleMockRecorder struct {
	mock *ConfigurationDBModule
}

// NewConfigurationDBModule creates a new mock instance
func NewConfigurationDBModule(ctrl *gomock.Controller) *ConfigurationDBModule {
	mock := &ConfigurationDBModule{ctrl: ctrl}
	mock.recorder = &ConfigurationDBModuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ConfigurationDBModule) EXPECT() *ConfigurationDBModuleMockRecorder {
	return m.recorder
}

// GetConfiguration mocks base method
func (m *ConfigurationDBModule) GetConfiguration(arg0 context.Context, arg1 string) (string, error) {
	ret := m.ctrl.Call(m, "GetConfiguration", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfiguration indicates an expected call of GetConfiguration
func (mr *ConfigurationDBModuleMockRecorder) GetConfiguration(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfiguration", reflect.TypeOf((*ConfigurationDBModule)(nil).GetConfiguration), arg0, arg1)
}

// StoreOrUpdate mocks base method
func (m *ConfigurationDBModule) StoreOrUpdate(arg0 context.Context, arg1, arg2 string) error {
	ret := m.ctrl.Call(m, "StoreOrUpdate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreOrUpdate indicates an expected call of StoreOrUpdate
func (mr *ConfigurationDBModuleMockRecorder) StoreOrUpdate(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreOrUpdate", reflect.TypeOf((*ConfigurationDBModule)(nil).StoreOrUpdate), arg0, arg1, arg2)
}
