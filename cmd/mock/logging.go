// Code generated by MockGen. DO NOT EDIT.
// Source: logging.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Redis is a mock of Redis interface
type Redis struct {
	ctrl     *gomock.Controller
	recorder *RedisMockRecorder
}

// RedisMockRecorder is the mock recorder for Redis
type RedisMockRecorder struct {
	mock *Redis
}

// NewRedis creates a new mock instance
func NewRedis(ctrl *gomock.Controller) *Redis {
	mock := &Redis{ctrl: ctrl}
	mock.recorder = &RedisMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Redis) EXPECT() *RedisMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m *Redis) Send(commandName string, args ...interface{}) error {
	varargs := []interface{}{commandName}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Send", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send
func (mr *RedisMockRecorder) Send(commandName interface{}, args ...interface{}) *gomock.Call {
	varargs := append([]interface{}{commandName}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*Redis)(nil).Send), varargs...)
}
