# For the keys representing duration (i.e. the key ending with "-interval" or "-validity"), 
# the Go syntax is used. Valid units are "h", "m", "s", "ms", "us", "ns", e.g. "2h30m10s".

# Publishing
internal-http-host-port: 0.0.0.0:8888
management-http-host-port: 0.0.0.0:8877
account-http-host-port: 0.0.0.0:8866
register-http-host-port: 0.0.0.0:8855
mobile-http-host-port: 0.0.0.0:8844
monitoring-http-host-port: 0.0.0.0:8899

# Log level
#   - error: log only error log level
#   - warn: log error and warn log levels
#   - info: log error, warn, info log levels
#   - debug: log error, warn, info, debug log levels
log-level: debug

# Access logs
access-logs: true

# CORS
cors-allowed-origins:
  - "http://backoffice.local:8080"
  - "http://selfservice.local:8080"
  - "http://register.local:8080"
  - "http://indirect-sp-login.local:8080"
  - "http://localhost:4200" # backoffice
  - "http://localhost:4400" # self-service
  - "http://localhost:4600" # register
  - "http://localhost:4700" # signer
  - "http://localhost:4800" # support
cors-allowed-methods:
  - "GET"
  - "POST"
  - "PUT"
  - "DELETE"
cors-allow-credentials: true
cors-allowed-headers:
  - "Authorization"
  - "Content-Type"
  - "X-Correlation-Id"
  - "Cache-Control"
  - "Pragma"
  - "Accept"
cors-exposed-headers:
  - "Location"
  - "X-Correlation-Id"
cors-debug: true

# Security
## Audience for JWT token
audience-required: "account"
mobile-audience-required: "mobile"

## Password used to protect /internal/validation endpoint
validation-basic-auth-token: "idnowsuperpasswordverylongandstrong"

# DB encryption key
db-archive-aesgcm-key: '[{"kid":"ar_dev_1","value":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="}]'
db-archive-aesgcm-tag-size: 16

## trustID groups allowed to be set
trustid-groups: 
  - "l1_support_agent"
  - "registration_officer"
  - "end_user"

# Keycloak configs
keycloak-api-uri: http://keycloak.internal.local:8080
keycloak-oidc-uri-map:
  default: http://keycloak.local:8080
keycloak-timeout: 5s

#Accounting configs
accounting-api-uri: http://0.0.0.0:8940
accounting-timeout: 5s

accreditations-api-uri: http://host.docker.internal:9023
accreditations-api-timeout: 5s

idnow-service-api-uri: http://host.docker.internal:8755
idnow-service-api-timeout: 5s

# DB Configuration RW
db-config-rw-enabled: true
db-config-rw-host-port: host.docker.internal:3306
db-config-rw-username: bridge
db-config-rw-password: bridge-password
db-config-rw-database: cloudtrust
db-config-rw-protocol: tcp
db-config-rw-parameters: time_zone='%2B00:00'
db-config-rw-max-open-conns: 10
db-config-rw-max-idle-conns: 2
db-config-rw-conn-max-lifetime: 10
db-config-rw-migration: false
db-config-rw-migration-version: 0.1
db-config-rw-connection-check: true

# DB Configuration RO
db-config-ro-enabled: true
db-config-ro-host-port: host.docker.internal:3306
db-config-ro-username: bridge
db-config-ro-password: bridge-password
db-config-ro-database: cloudtrust
db-config-ro-protocol: tcp
db-config-ro-parameters: time_zone='%2B00:00'
db-config-ro-max-open-conns: 10
db-config-ro-max-idle-conns: 2
db-config-ro-conn-max-lifetime: 10
db-config-ro-migration: false
db-config-ro-migration-version: 0.1
db-config-ro-connection-check: true

# DB archive RW
db-archive-rw-enabled: true
db-archive-rw-host-port: host.docker.internal:3306
db-archive-rw-username: user_writer
db-archive-rw-password: password-to-be-defined
db-archive-rw-database: archive
db-archive-rw-protocol: tcp
db-archive-rw-parameters: time_zone='%2B00:00'
db-archive-rw-max-open-conns: 10
db-archive-rw-max-idle-conns: 2
db-archive-rw-conn-max-lifetime: 10
db-archive-rw-migration: false
db-archive-rw-migration-version: 0.1
db-archive-rw-connection-check: false

# Rate limiting in requests/second.
rate-validation: 1000
rate-communications: 1000
rate-account: 1000
rate-management: 1000
rate-management-status: 2
rate-statistics: 1000
rate-register: 1000
rate-support: 10
rate-tasks: 10
rate-kyc: 1000
rate-mobile: 1000

# Debug routes
pprof-route-enabled: true

# Liveness probe
livenessprobe-http-timeout: 900
livenessprobe-cache-duration: 500
livenessprobe-audit-timeout: 3000
healthcheck-endpoints:
  Keycloak: http://keycloak.internal.local:8080

# Register API parameters
# removed register-techuser-username, register-techuser-password and register-techuser-client-id
register-realm: trustid
recaptcha-url: https://www.google.com/recaptcha/api/siteverify
recaptcha-secret: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe # Public test account, always ok


# Technical user
technical-realm: master
technical-username: technical
technical-password: P@ssw0rd
technical-client-id: admin-cli

# GLN
gln-refdata-enabled: true
gln-refdata-uri: https://refdatabase.refdata.ch/Service/Partner.asmx
gln-refdata-timeout: 10s
gln-medreg-enabled: false
gln-medreg-uri: https://www.medregom.admin.ch
gln-medreg-timeout: 10s
gln-nareg-enabled: false
gln-nareg-uri: https://www.nareg.ch
gln-nareg-timeout: 10s
gln-psyreg-enabled: false
gln-psyreg-uri: https://ws.psyreg.bag.admin.ch
gln-psyreg-timeout: 10s

onboarding-realm-overrides:
  realmName-hp: realmName
  realmName-institution: realmName

context-keys:
- id: 19251660-f869-11ec-b939-0242ac120002
  realm: trustid
  registrationRealm: trustid
  onboardingRedirectURI: http://localhost/
  identificationURI: http://identification-uri
  onboardingClientID: onboarding
  redirectMode: false

# Kafka config
kafka:
- id: cluster1
  enabled: true
  version: "3.1.0"
  tls-enabled: false
  sarama-log-enabled: true
  brokers:
  - "kafka:29093"
  security:
    client-id: kafka-client
    client-secret: f211cf42-f01c-4c01-9e6a-b7bbfd0adf05
    token-url: http://keycloak.internal.local:8080/auth/realms/master/protocol/openid-connect/token
  producers:
  - id: auth-reload-producer
    topic: auth-reload
  - id: event-producer
    topic: cloudtrust-event
  consumers:
  - id: auth-reload-consumer
    topic: auth-reload
    consumer-group-name: <UUID>

log-events-rate: 1
