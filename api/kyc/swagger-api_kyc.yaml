openapi: 3.0.1
info:
  title: Swagger Cloudtrust Register
  description: 'Know your customer API for Cloudtrust.'
  version: 1.0.0
servers:
- url: http://localhost:8855
tags:
- name: KYC
  description: Know your customer API
paths:
  /kyc/actions:
    get:
      tags:
      - KYC
      summary: Gets the list of all possible actions
      security:
        - openId: []
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actions'
        403:
          description: No permission to call this operation
  /kyc/users:
    get:
      tags:
      - KYC
      summary: Gets a user (search by username)
      security:
        - openId: []
      parameters:
      - name: username
        in: query
        description: name of the user to be retrieved
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation. Returns the generated username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        403:
          description: No permission to call this operation
  /kyc/users/{userId}:
    get:
      tags:
      - KYC
      summary: Gets a user
      security:
        - openId: []
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        403:
          description: No permission to call this operation
    put:
      tags:
      - KYC
      summary: >
        Updates a user after physical identification.
        User id parameter is mandatory in the path of the URL. The username value in the request body will be overriden by the username from Keycloak.
      security:
        - openId: []
      parameters:
      - name: userId
        in: path
        description: user id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid information provided
        403:
          description: No permission to call this operation
components:
  schemas:
    Actions:
      type: object
      properties:
        name:
          type: string
        scope:
          type: string
    User:
      type: object
      required: [gender, firstName, lastName, emailAddress, phoneNumber]
      properties:
        id:
          type: string
          description: Ignored by PUT user
        username:
          type: string
          description: Ignored by PUT user
        gender:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          description: Ignored by PUT user
        emailVerified:
          type: boolean
          description: Ignored by PUT user
        phoneNumber:
          type: string
          description: Ignored by PUT user
        phoneNumberVerified:
          type: boolean
          description: Ignored by PUT user
        birthDate:
          type: string
          description: format is DD.MM.YYYY
        birthLocation:
          type: string
        idDocumentType:
          type: string
          enum: [ID_CARD, PASSPORT, RESIDENCE_PERMIT]
        idDocumentNumber:
          type: string
        idDocumentExpiration:
          type: string
        comment:
          type: string
          description: Used only by validateUser
        accreditations:
          type: array
          description: Used only by getUser
          items:
            type: object
            properties:
              type:
                type: string
                description: accreditation type
              expiryDate:
                type: string
                description: expiry date. format is DD.MM.YYYY
              expired:
                type: bool
                description: true if the expiry date has passed
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: http://toto.com/.well-known/openid-configuration