namespace fb;

enum EventType:byte {
    LOGIN,
    LOGIN_ERROR,
    REGISTER,
    REGISTER_ERROR,
    LOGOUT,
    LOGOUT_ERROR,
    CODE_TO_TOKEN,
    CODE_TO_TOKEN_ERROR,
    CLIENT_LOGIN,
    CLIENT_LOGIN_ERROR,
    REFRESH_TOKEN,
    REFRESH_TOKEN_ERROR,
    VALIDATE_ACCESS_TOKEN,
    VALIDATE_ACCESS_TOKEN_ERROR ,
    INTROSPECT_TOKEN,
    INTROSPECT_TOKEN_ERROR,
    FEDERATED_IDENTITY_LINK,
    FEDERATED_IDENTITY_LINK_ERROR,
    REMOVE_FEDERATED_IDENTITY,
    REMOVE_FEDERATED_IDENTITY_ERROR,
    UPDATE_EMAIL,
    UPDATE_EMAIL_ERROR,
    UPDATE_PROFILE,
    UPDATE_PROFILE_ERROR,
    UPDATE_PASSWORD,
    UPDATE_PASSWORD_ERROR,
    UPDATE_TOTP,
    UPDATE_TOTP_ERROR,
    VERIFY_EMAIL,
    VERIFY_EMAIL_ERROR,
    REMOVE_TOTP,
    REMOVE_TOTP_ERROR,
    REVOKE_GRANT,
    REVOKE_GRANT_ERROR,
    SEND_VERIFY_EMAIL,
    SEND_VERIFY_EMAIL_ERROR,
    SEND_RESET_PASSWORD,
    SEND_RESET_PASSWORD_ERROR,
    SEND_IDENTITY_PROVIDER_LINK,
    SEND_IDENTITY_PROVIDER_LINK_ERROR,
    RESET_PASSWORD,
    RESET_PASSWORD_ERROR,
    RESTART_AUTHENTICATION,
    RESTART_AUTHENTICATION_ERROR,
    INVALID_SIGNATURE,
    INVALID_SIGNATURE_ERROR,
    REGISTER_NODE,
    REGISTER_NODE_ERROR,
    UNREGISTER_NODE,
    UNREGISTER_NODE_ERROR,
    USER_INFO_REQUEST,
    USER_INFO_REQUEST_ERROR,
    IDENTITY_PROVIDER_LINK_ACCOUNT,
    IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR,
    IDENTITY_PROVIDER_LOGIN,
    IDENTITY_PROVIDER_LOGIN_ERROR,
    IDENTITY_PROVIDER_FIRST_LOGIN,
    IDENTITY_PROVIDER_FIRST_LOGIN_ERROR,
    IDENTITY_PROVIDER_POST_LOGIN,
    IDENTITY_PROVIDER_POST_LOGIN_ERROR,
    IDENTITY_PROVIDER_RESPONSE,
    IDENTITY_PROVIDER_RESPONSE_ERROR,
    IDENTITY_PROVIDER_RETRIEVE_TOKEN,
    IDENTITY_PROVIDER_RETRIEVE_TOKEN_ERROR,
    IMPERSONATE,
    IMPERSONATE_ERROR,
    CUSTOM_REQUIRED_ACTION,
    CUSTOM_REQUIRED_ACTION_ERROR,
    EXECUTE_ACTIONS,
    EXECUTE_ACTIONS_ERROR,
    EXECUTE_ACTION_TOKEN,
    EXECUTE_ACTION_TOKEN_ERROR,
    CLIENT_INFO,
    CLIENT_INFO_ERROR,
    CLIENT_REGISTER,
    CLIENT_REGISTER_ERROR,
    CLIENT_UPDATE,
    CLIENT_UPDATE_ERROR,
    CLIENT_DELETE,
    CLIENT_DELETE_ERROR,
    CLIENT_INITIATED_ACCOUNT_LINKING,
    CLIENT_INITIATED_ACCOUNT_LINKING_ERROR,
    UNKNOWN // Default case
}

enum ResourceType:byte {
    REALM,
    REALM_ROLE,
    REALM_ROLE_MAPPING,
    REALM_SCOPE_MAPPING,
    AUTH_FLOW,
    AUTH_EXECUTION_FLOW,
    AUTH_EXECUTION,
    AUTHENTICATOR_CONFIG,
    REQUIRED_ACTION,
    IDENTITY_PROVIDER,
    IDENTITY_PROVIDER_MAPPER,
    PROTOCOL_MAPPER,
    USER,
    USER_LOGIN_FAILURE,
    USER_SESSION,
    USER_FEDERATION_PROVIDER,
    USER_FEDERATION_MAPPER,
    GROUP,
    GROUP_MEMBERSHIP,
    CLIENT,
    CLIENT_INITIAL_ACCESS_MODEL,
    CLIENT_ROLE,
    CLIENT_ROLE_MAPPING,
    CLIENT_TEMPLATE,
    CLIENT_SCOPE_MAPPING,
    CLUSTER_NODE,
    COMPONENT,
    AUTHORIZATION_RESOURCE_SERVER,
    AUTHORIZATION_RESOURCE,
    AUTHORIZATION_SCOPE,
    AUTHORIZATION_POLICY,
    UNKNOWN // Default case
}

enum OperationType:byte {
    CREATE,
    UPDATE,
    DELETE,
    ACTION
}

table Tuple {
    key:string;
    value:string;
}

table AuthDetails {
    realmId:string;
    clientId:string;
    userId:string;
    ipAddress:string;
}

table Event {
    uid:long;
    time:long;
    type:EventType;
    realmId:string;
    clientId:string;
    userId:string;
    sessionId:string;
    ipAddress:string;
    error:string;
    details:[Tuple];
}

table AdminEvent {
    uid:long;
    time:long;
    realmId:string;
    authDetails:AuthDetails;
    resourceType:ResourceType;
    operationType:OperationType;
    resourcePath:string;
    representation:string;
    error:string;
}

root_type Event;
root_type AdminEvent;