openapi: 3.0.1
info:
  title: Swagger Cloudtrust Management
  description: 'API Self service for Cloudtrust.'
  version: 1.0.0
servers:
- url: http://localhost:8888
paths:
  /account:
    get:
      tags:
      - Account
      summary: Get account representation of the current user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    post:
      tags:
      - Account
      summary: Update account representation of the current user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        200:
          description: successful operation
    delete:
      tags:
      - Account
      summary: Delete account
      responses:
        200:
          description: successful operation
  /account/credentials:
    get:
      tags:
      - Credentials
      summary: Get list of credentials of the user.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  credentials:
                    type: array
                    items:
                      $ref: '#/components/schemas/Credential'
  /account/credentials/password:
    post:
      tags:
      - Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      summary: Update password
      responses:
        200:
          description: The password has been updated
        400:
          description: Bad parameters (same old and new passwords, different new and confirm passwords, ...)
        403:
          description: Caller is not allowed to change the password
  /account/configuration:
    get:
      tags:
      - Credentials
      summary: Get self-service configuration
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
  /account/credentials/registrators:
    get:
      tags:
      - Credentials
      summary: Get all registrators available for the user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistratorId'
  /account/credentials/{credentialId}:
    put:
      tags:
      - Credentials
      summary: Update UserLabel of credential (all other attributes will be ignored)
      parameters:
      - name: credentialId
        in: path
        description: id of the credential
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
      responses:
        200:
          description: Successfuly updated.
    delete:
      tags:
      - Credentials
      summary: Delete the credential
      parameters:
      - name: credentialId
        in: path
        description: id of the credential
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
  /account/credentials/{credentialId}/after/{previousCredentialId}:
    post:
      tags:
      - Credentials
      summary: Change priority order among credentials
      parameters:
      - name: credentialId
        in: path
        description: id of the credential to move
        required: true
        schema:
          type: string
      - name: previousCredentialId
        in: path
        description: id of the credential before the moved one. Use 'null' to move the credential at the top of the list.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation.

components:
  schemas:
    UpdatePassword:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
    Credential:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        userLabel:
          type: string
        createdDate:
          type: integer
        credentialData:
          type: object
        temporary:
          type: boolean
    RegistratorId:
      type: string
    Account:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
    Configuration:
      type: object
      properties:
        show_authenticators_tab:
          type: boolean
        show_password_tab:
          type: boolean
        show_mail_editing:
          type: boolean
        show_account_deletion_button:
          type: boolean
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: http://toto.com/.well-known/openid-configuration
security:
  - openId:
    - todo