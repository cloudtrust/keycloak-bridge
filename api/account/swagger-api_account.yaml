openapi: 3.0.1
info:
  title: Swagger Cloudtrust Management
  description: 'API Self service for Cloudtrust.'
  version: 1.0.0
servers:
- url: http://localhost:8888
paths:
  /account:
    get:
      tags:
      - Account
      summary: Get account representation of the current user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    post:
      tags:
      - Account
      summary: Update account representation of the current user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        200:
          description: successful operation
    delete:
      tags:
      - Account
      summary: Delete account
      responses:
        200:
          description: successful operation
  /account/configuration:
    get:
      tags:
      - Credentials
      summary: Get self-service configuration. Realm query parameter is used to override some configuration parameters with the value specified for the realm
      parameters:
      - name: realm_id
        in: query
        schema:
          type: string
        allowEmptyValue: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
  /account/credentials:
    get:
      tags:
      - Credentials
      summary: Get list of credentials of the user.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  credentials:
                    type: array
                    items:
                      $ref: '#/components/schemas/Credential'
  /account/credentials/password:
    post:
      tags:
      - Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      summary: Update password
      responses:
        200:
          description: The password has been updated
        400:
          description: Bad parameters (same old and new passwords, different new and confirm passwords, ...)
        403:
          description: Caller is not allowed to change the password
  /account/credentials/registrators:
    get:
      tags:
      - Credentials
      summary: Get all registrators available for the user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistratorId'
  /account/credentials/{credentialId}:
    put:
      tags:
      - Credentials
      summary: Update UserLabel of credential (all other attributes will be ignored)
      parameters:
      - name: credentialId
        in: path
        description: id of the credential
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
      responses:
        200:
          description: Successfuly updated.
    delete:
      tags:
      - Credentials
      summary: Delete the credential
      parameters:
      - name: credentialId
        in: path
        description: id of the credential
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
  /account/credentials/{credentialId}/after/{previousCredentialId}:
    post:
      tags:
      - Credentials
      summary: Change priority order among credentials
      parameters:
      - name: credentialId
        in: path
        description: id of the credential to move
        required: true
        schema:
          type: string
      - name: previousCredentialId
        in: path
        description: id of the credential before the moved one. Use 'null' to move the credential at the top of the list.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation.
  /account/profile:
    get:
      tags:
      - Profile
      summary: Gets the definition of user attributes
      responses:
        200:
          description: successful operation. Returns the realm users profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /account/verify-email:
    put:
      tags:
      - Account
      summary: Request an email verification
      responses:
        200:
          description: successful operation
  /account/verify-phone-number:
    put:
      tags:
      - Account
      summary: Request a phone number verification
      responses:
        200:
          description: successful operation
  /account/cancel-email-change:
    put:
      tags:
      - Account
      summary: Cancels a change of email address
      responses:
        200:
          description: successful operation
  /account/cancel-phone-number-change:
    put:
      tags:
      - Account
      summary: Cancels a change of phone number
      responses:
        200:
          description: successful operation
  /account/linked-accounts:
    get:
      tags:
      - Account
      summary: Get the list of accounts linked to the current user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedAccount'
  /account/linked-accounts/{providerAlias}:
    delete:
      tags:
      - Account
      summary: Delete the linked account
      parameters:
        - name: providerAlias
          in: path
          description: alias of the login provider
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
components:
  schemas:
    UpdatePassword:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
    Credential:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        userLabel:
          type: string
        createdDate:
          type: integer
          format: int64
        credentialData:
          type: object
        temporary:
          type: boolean
    RegistratorId:
      type: string
    Account:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
          description: only returned by /account
        emailToValidate:
          type: string
          description: Read only. Email requested to be the email of the user but not yet validated
        gender:
          type: string
          description: only returned by /account
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        phoneNumberVerified:
          type: boolean
          description: only returned by /account
        phoneNumberToValidate:
          type: string
          description: Read only. Phone number requested to be the phone number of the user but not yet validated
        birthDate:
          type: string
          description: only returned by /account. format is DD.MM.YYYY
        birthLocation:
          type: string
          description: only returned by /account
        nationality:
          type: string
          description: ISO 3166 Alpha-2 country code
        idDocumentType:
          type: string
          enum: [ID_CARD, PASSPORT, RESIDENCE_PERMIT]
          description: only returned by /account
        idDocumentNumber:
          type: string
          description: only returned by /account
        idDocumentExpiration:
          type: string
          description: only returned by /account
        idDocumentCountry:
          type: string
          description: ISO 3166 Alpha-2 country code
        locale:
          type: string
        businessId:
          type: string
          description: Business identifier (can be GLN)
        accreditations:
          type: array
          description: only returned by /account
          items:
            type: object
            properties:
              type:
                type: string
                description: accreditation type
              expiryDate:
                type: string
                description: expiry date. format is DD.MM.YYYY
              expired:
                type: boolean
                description: true if the expiry date has passed
              revoked:
                type: boolean
                description: true if the accreditation has been revoked
        pendingChecks:
          type: array
          description: Used only by getUser
          items:
            type: string
    Configuration:
      type: object
      properties:
        editing_enabled:
          type: boolean
        show_authenticators_tab:
          type: boolean
        show_password_tab:
          type: boolean
        show_profile:
          type: boolean
        show_account_deletion_button:
          type: boolean
        show_idplinks_tab:
          type: boolean
        self_service_default_tab:
          type: string
        redirect_successful_registration_url:
          type: string
        available-checks:
          type: object
          additionalProperties:
            type: boolean
        barcode_type:
          type: string
          enum: [CODE128]
        onboarding_user_editing_enabled:
          type: boolean
        theme:
          type: string
        supportedLocales:
          type: array
          items:
            type: string
    LinkedAccount:
      type: object
      properties:
        connected:
          type: boolean
        social:
          type: boolean
        providerAlias:
          type: string
        providerName:
          type: string
        displayName:
          type: string
        linkedUsername:
          type: string
    Profile:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProfileAttribute'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProfileGroup'
          description: groups are used to gather user attributes by themes
    ProfileAttribute:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        group:
          type: string
          description: name of a group defined in ProfileGroup
        required:
          type: boolean
        validations:
          $ref: '#/components/schemas/ProfileAttributeValidations'
    ProfileAttributeValidations:
      description: >
        Here is a list of known validators :
        email: no parameters
        length: min/max (can be integer or string), trim-disabled (boolean as string)
        integer: min/max (integer as string)
        double: min/max (integer as string)
        options: options (array of allowed values)
        pattern: pattern (regex), error-message (string)
        local-date: no parameters
        uri: no parameters
        username-prohibited-characters: error-message (string)
        person-name-prohibited-characters: error-message (string)
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProfileAttributeValidator'
    ProfileAttributeValidator:
      type: object
      additionalProperties:
        type: object
    ProfileGroup:
      type: object
      properties:
        name:
          type: string
        displayHeader:
          type: string
        displayDescription:
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: http://toto.com/.well-known/openid-configuration
security:
  - openId:
    - todo